{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "tatulino",
  "homepage": "https://spaceuy.github.io/react-registry",
  "items": [
    {
      "name": "hello-world",
      "type": "registry:component",
      "title": "Hello World",
      "description": "A simple hello world component",
      "registryDependencies": ["button"],
      "files": [
        {
          "path": "registry/new-york/blocks/hello-world/hello-world.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "example-form",
      "type": "registry:component",
      "title": "Example Form",
      "description": "A contact form with Zod validation.",
      "dependencies": ["zod"],
      "registryDependencies": ["button", "input", "label", "textarea", "card"],
      "files": [
        {
          "path": "registry/new-york/blocks/example-form/example-form.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "complex-component",
      "type": "registry:component",
      "title": "Complex Component",
      "description": "A complex component showing hooks, libs and components.",
      "registryDependencies": ["card"],
      "files": [
        {
          "path": "registry/new-york/blocks/complex-component/page.tsx",
          "type": "registry:page",
          "target": "app/pokemon/page.tsx"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/lib/pokemon.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "example-with-css",
      "type": "registry:component",
      "title": "Example with CSS",
      "description": "A login form with a CSS file.",
      "files": [
        {
          "path": "registry/new-york/blocks/example-with-css/example-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/example-with-css/example-card.css",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "form-complete",
      "type": "registry:component",
      "title": "Complete Form",
      "description": "A comprehensive form with various input types, react-hook-form, Zod validation, and toast notifications.",
      "dependencies": [
        "zod",
        "react-hook-form",
        "@hookform/resolvers",
        "date-fns",
        "lucide-react",
        "sonner"
      ],
      "registryDependencies": [
        "button",
        "input",
        "label",
        "card",
        "form",
        "calendar",
        "popover",
        "select"
      ],
      "files": [
        {
          "path": "registry/new-york/blocks/form-complete/form-complete.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/form-complete/page.tsx",
          "type": "registry:page",
          "target": "app/form-complete-example/page.tsx"
        }
      ]
    },
    {
      "name": "vite-template-docs",
      "type": "registry:block",
      "title": "Vite Template Docs",
      "description": "Docs for the Vite Template",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "planetary/template/vite/README.md",
          "type": "registry:file",
          "target": "docs/template/README-template-vite.md"
        },
        {
          "path": "planetary/template/vite/docs/README.md",
          "type": "registry:file",
          "target": "docs/template/README.md"
        },
        {
          "path": "planetary/template/vite/docs/project-structure.md",
          "type": "registry:file",
          "target": "docs/template/project-structure.md"
        }
      ]
    },
    {
      "name": "posthog",
      "type": "registry:block",
      "title": "Posthog analytics",
      "description": "Posthog analytics",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": ["posthog-js"],
      "registryDependencies": [],
      "files": [
        {
          "path": "planetary/template/vite/src/common/lib/posthog.tsx",
          "type": "registry:lib",
          "target": "src/common/lib/posthog.ts"
        }
      ]
    },
    {
      "name": "zustand",
      "type": "registry:block",
      "title": "Zustand",
      "description": "Zustand",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": ["zustand"],
      "registryDependencies": [],
      "files": [
        {
          "path": "planetary/template/vite/src/common/store/use-store.ts",
          "type": "registry:hook",
          "target": "src/common/stores/use-store.ts"
        },
        {
          "path": "planetary/template/vite/src/common/store/use-persist-store.ts",
          "type": "registry:hook",
          "target": "src/common/stores/use-persist-store.ts"
        },
        {
          "path": "planetary/template/vite/src/common/store/README.md",
          "type": "registry:file",
          "target": "docs/zustand/README.md"
        }
      ]
    },
    {
      "name": "environment",
      "type": "registry:block",
      "title": "Environment Configuration",
      "description": "Set up env vars using zod",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": ["zod"],
      "registryDependencies": [],
      "files": [
        {
          "path": "planetary/template/vite/src/common/utils/environment.ts",
          "type": "registry:file",
          "target": "src/common/utils/environment.ts"
        },
        {
          "path": "planetary/template/vite/src/env.example",
          "type": "registry:file",
          "target": ".env.example"
        }
      ]
    },
    {
      "name": "logger",
      "type": "registry:block",
      "title": "Logger",
      "description": "Logger",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "planetary/template/vite/src/common/utils/logger.ts",
          "type": "registry:file",
          "target": "src/common/utils/logger.ts"
        }
      ]
    },
    {
      "name": "vite-template",
      "type": "registry:block",
      "title": "Vite Template",
      "description": "A template for a Vite project.",
      "author": "Jona630 https://github.com/Jona630",
      "dependencies": [],
      "registryDependencies": [
        "https://spaceuy.github.io/react-registry/r/vite-template-docs.json",
        "https://spaceuy.github.io/react-registry/r/posthog.json",
        "https://spaceuy.github.io/react-registry/r/zustand.json",
        "https://spaceuy.github.io/react-registry/r/environment.json",
        "https://spaceuy.github.io/react-registry/r/logger.json"
      ],
      "files": [
        {
          "path": "planetary/template/vite/src/main.tsx",
          "type": "registry:file",
          "target": "src/main-template.tsx"
        },
        {
          "path": "planetary/template/vite/src/router.tsx",
          "type": "registry:file",
          "target": "src/router.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/components/error-boundary/auth-layout-with-error.tsx",
          "type": "registry:file",
          "target": "src/common/components/error-boundary/auth-layout-with-error.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/components/error-boundary/login-layout-with-error.tsx",
          "type": "registry:file",
          "target": "src/common/components/error-boundary/login-layout-with-error.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/components/error-boundary/route-error.tsx",
          "type": "registry:file",
          "target": "src/common/components/error-boundary/route-error.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/components/theme-provider.tsx",
          "type": "registry:file",
          "target": "src/common/components/theme-provider.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/components/theme-toggle.tsx",
          "type": "registry:file",
          "target": "src/common/components/theme-toggle.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/layouts/auth-layout.tsx",
          "type": "registry:file",
          "target": "src/common/layouts/auth-layout.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/layouts/layout.tsx",
          "type": "registry:file",
          "target": "src/common/layouts/layout.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/lib/utils.ts",
          "type": "registry:file",
          "target": "src/common/lib/utils.ts"
        },
        {
          "path": "planetary/template/vite/src/common/lib/services/query.interceptor.ts",
          "type": "registry:file",
          "target": "src/common/lib/services/query.interceptor.ts"
        },
        {
          "path": "planetary/template/vite/src/common/types/routes.ts",
          "type": "registry:file",
          "target": "src/common/types/routes.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/api-error.ts",
          "type": "registry:file",
          "target": "src/common/utils/api-error.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/constants.ts",
          "type": "registry:file",
          "target": "src/common/utils/constants.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/date.ts",
          "type": "registry:file",
          "target": "src/common/utils/date.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/debounce.ts",
          "type": "registry:file",
          "target": "src/common/utils/debounce.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/logger.ts",
          "type": "registry:file",
          "target": "src/common/utils/logger.ts"
        },
        {
          "path": "planetary/template/vite/src/common/utils/wallet.ts",
          "type": "registry:file",
          "target": "src/common/utils/wallet.ts"
        },
        {
          "path": "planetary/template/vite/src/common/hooks/use-mobile.tsx",
          "type": "registry:hook",
          "target": "src/common/hooks/use-mobile.tsx"
        },
        {
          "path": "planetary/template/vite/src/common/views/not-found.tsx",
          "type": "registry:component",
          "target": "src/common/views/not-found.tsx"
        },
        {
          "path": "planetary/template/vite/src/modules/home/router.tsx",
          "type": "registry:file",
          "target": "src/modules/home/router.tsx"
        },
        {
          "path": "planetary/template/vite/src/modules/home/views/home.tsx",
          "type": "registry:component",
          "target": "src/modules/home/views/home.tsx"
        }
      ]
    },
    {
      "name": "virtualized-infinite-scroll",
      "type": "registry:complex-component",
      "description": "A hook that combines TanStack Query's infinite queries with TanStack Virtual for efficient virtualized infinite scrolling. Implemented with shadcn table to show how it works.",
      "dependencies": ["@tanstack/react-query", "@tanstack/react-virtual", "react"],
      "files": [
        {
          "path": "registry/new-york/blocks/use-virtualized-infinite-scroll/use-virtualized-infinite-scroll.ts",
          "type": "registry:hook"
        }
      ]
    }
  ]
}
